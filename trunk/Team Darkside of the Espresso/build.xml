<?xml version  =  "1.0" encoding  =  "UTF-8"?>

<project name="Team Darkside of the Espresso" default="all" basedir=".">
	<target name="init">
		<property name="version" value="1.0.0" />

		<property name="client.build.num" value="build1" />
		<property name="server.build.num" value="build1" />

		<property name="pkg.name" value="Release" />


		<property name="bin.dir" location="bin" />
		<property name="build.dir" location="build" />
		<property name="doc.dir" location="doc" />
		<property name="lib.dir" location="lib" />
		<property name="resources.dir" location="resources" />
		<property name="src.dir" location="src" />
		<property name="test.db.dir" location="DB" />
		<property name="test.log.dir" location="Logs" />


		<property name="global.pkg" value="edu.gatech.TeamDarksideOfTheEspresso" />
		<property name="global.pkg.dir" value="edu${file.separator}gatech${file.separator}TeamDarksideOfTheEspresso" />


		<property name="hospital-client.pkg" value="${global.pkg}.HospitalClient" />
		<property name="hospital-server.pkg" value="${global.pkg}.HospitalServer" />


		<property name="client.name" value="Hospital Client" />
		<property name="server.name" value="Hospital Server" />


		<path id="classpath">
			<fileset dir="${lib.dir}">
				<include name="sqlitejdbc-v056.jar" />
				<include name="JUnit-4.9b2.jar" />
			</fileset>
		</path>

		<path id="test.classpath">
			<pathelement location="${lib.dir}${file.separator}JUnit-4.9b2.jar" />
			<pathelement location="${src.dir}" />
			<path refid="classpath" />
		</path>

		<manifestclasspath property="server.manifest.classpath" jarfile="${server.name}.jar">
			<classpath refid="classpath" />
		</manifestclasspath>

	</target>


	<target name="prepare" depends="init">
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${doc.dir}" />
		<mkdir dir="${test.db.dir}" />
		<mkdir dir="${test.log.dir}" />
		<mkdir dir="${bin.dir}${file.separator}resources" />

		<copy todir="${bin.dir}${file.separator}resources">
			<fileset dir="${resources.dir}" />
		</copy>
	</target>


	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir}" destdir="${bin.dir}" includeantruntime="false" />
	</target>


	<target name="jar" depends="jar-client,jar-server">
	</target>


	<target name="jar-client" depends="javadoc">
		<jar destfile="${client.name}.jar" basedir="${bin.dir}" whenmanifestonly="fail" update="true">
			<fileset dir=".">
				<include name="${global.pkg.dir}${file.separator}Appointment${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}HospitalClient${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}Network${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}Record${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}SystemLog${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}UI${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}Users${file.separator}*.class" />

				<include name="${resources.dir}${file.separator}**${file.separator}*.png" />
			</fileset>

			<manifest>
				<attribute name="Main-Class" value="${hospital-client.pkg}.Main" />
				<attribute name="Class-Path" value=". ${server.manifest.classpath}" />
				<attribute name="Built-By" value="Team Darkside of the Espresso" />
				<attribute name="Implementation-Title" value="Hospital Client" />
				<attribute name="Implementation-Version" value="${client.build.num}" />
				<attribute name="Implementation-Vendor" value="Team Darkside of the Espresso" />

				<section name="common">
					<attribute name="Specification-Title" value="Hospital Client" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="Team Darkside of the Espresso" />
				</section>
			</manifest>
		</jar>

		<chmod file="${client.name}.jar" perm="777" />
	</target>


	<target name="jar-server" depends="javadoc">
		<jar destfile="${server.name}.jar" basedir="${bin.dir}" whenmanifestonly="fail" update="true">
			<fileset dir=".">
				<include name="${global.pkg.dir}${file.separator}Appointment${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}HospitalServer${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}Network${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}Record${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}SystemLog${file.separator}*.class" />
				<include name="${global.pkg.dir}${file.separator}Users${file.separator}*.class" />

				<include name="${resources.dir}${file.separator}**${file.separator}*.png" />
			</fileset>

			<manifest>
				<attribute name="Main-Class" value="${hospital-server.pkg}.Main" />
				<attribute name="Class-Path" value=". ${server.manifest.classpath}" />
				<attribute name="Built-By" value="Team Darkside of the Espresso" />
				<attribute name="Implementation-Title" value="Hospital Server" />
				<attribute name="Implementation-Version" value="${server.build.num}" />
				<attribute name="Implementation-Vendor" value="Team Darkside of the Espresso" />


				<section name="common">
					<attribute name="Specification-Title" value="Hospital Server" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="Team Darkside of the Espresso" />
				</section>
			</manifest>
		</jar>

		<chmod file="${server.name}.jar" perm="777" />
	</target>


	<target name="clean" depends="init">
		<delete dir="${bin.dir}" />
		<delete dir="${doc.dir}" />
	</target>


	<target name="clean-all" depends="clean">
		<delete file="${pkg.name}.zip" />
		<delete file="${client.name}.jar" />
		<delete file="${server.name}.jar" />

		<delete dir="${build.dir}" />
		<delete dir="${test.db.dir}" />
		<delete dir="${test.log.dir}" />
	</target>


	<target name="test" depends="clean,compile,test-server,test-client">
		<junit>
			<classpath refid="classpath" />
			<formatter type="brief" usefile="false" />
			<test name="NetworkTest" />
		</junit>
	</target>


	<target name="test-client" depends="clean,compile">
		<!-- TODO Implement Target -->
	</target>


	<target name="test-server" depends="clean,compile">
		<!-- TODO Implement Target -->
	</target>


	<target name="all" depends="package">
	</target>


	<target name="run" depends="run-server,run-client">
		<echo message="Done!" />
	</target>


	<target name="run-client" depends="jar-client">
		<java jar="${client.name}.jar" fork="true">
			<classpath>
				<pathelement location="java.class.path" />
			</classpath>
		</java>
	</target>


	<target name="run-server" depends="jar-server">
		<java jar="${server.name}.jar" fork="true">
			<classpath>
				<pathelement location="java.class.path" />
			</classpath>
		</java>
	</target>


	<target name="javadoc" depends="compile">
		<javadoc sourcepath="${src.dir}" access="public" destdir="${doc.dir}" packagenames="${global.pkg}">
			<fileset dir="${src.dir}">
				<include name="**${file.separator}*.java" />
			</fileset>
		</javadoc>
	</target>


	<target name="package" depends="clean-all,jar">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}${file.separator}lib" />
		<mkdir dir="${build.dir}${file.separator}DB" />
		<mkdir dir="${build.dir}${file.separator}Logs" />

		<copy file="${client.name}.jar" todir="${build.dir}" />
		<copy file="${server.name}.jar" todir="${build.dir}" />

		<copy todir="${build.dir}${file.separator}lib">
			<fileset dir="${lib.dir}" />
		</copy>

		<zip destfile="${pkg.name}.zip" basedir="${build.dir}" />
	</target>
</project>
